os: linux
dist: xenial
sudo: required
language: java
jdk:
  - openjdk11

services:
  - docker

cache:
  directories:
    - $HOME/.m2
# the cache can grow constantly
before_cache:
  - rm -rf $HOME/.m2/repository/org/alfresco

branches:
  only:
    - master
    - /support\/.*/
    - feature/repo-4736-release_stage

env:
  global:
    # Must be in the format <alfresco-version>-<additional_versioning> ie. 6.3.0-repo-xxxx-x or 6.3.0-A-x
    - RELEASE_VERSION=6.3.0-test-release-repo-4736-1
    - DEVELOPMENT_VERSION=6.3.0-SNAPSHOT
    - TEST_VAR=original

stages:
#  - test
  - release
  - publish

# This should not be required on community build
before_install:
  - "cp .travis.settings.xml $HOME/.m2/settings.xml"

jobs:
  include:

    - name: "Release"
      stage: release
      if: fork = false AND (branch = feature/repo-4736-release_stage OR branch = master OR branch =~ /support\/.*/) AND type != pull_request AND commit_message =~ /\[release\]/
      before_script:
        - ./scripts/verify-git-tags.sh
      script:
        - echo "TEST ECHO VARS $RELEASE_VERSION $DEVELOPMENT_VERSION $TEST_VAR"
        - TEST_VAR="updated"
        # Use full history for release
        - git checkout -B "${TRAVIS_BRANCH}"
        # Add email to link commits to user
        - git config user.email "${GIT_EMAIL}"
        # Skip building of release commits
#        - mvn --batch-mode -q -DscmCommentPrefix="[maven-release-plugin][skip ci] " -Dusername="${GIT_USERNAME}" -Dpassword="${GIT_PASSWORD}" -DreleaseVersion=${RELEASE_VERSION} -DdevelopmentVersion=${DEVELOPMENT_VERSION} -DskipTests -Darguments="-DskipTests" -Prelease release:clean release:prepare release:perform
        - mvn clean install -DskipTests -Prelease
#        - ./scripts/maven_release.sh
      after_failure:
        - mvn release:rollback -DscmCommentPrefix="[maven-release-plugin][skip ci] "
      before_deploy:
        # Move the final artifacts to a single folder (deploy_dir) to be copied to S3
        - mkdir -p deploy_dir
        - cp war/target/alfresco.war deploy_dir
        - cp distribution/target/*-distribution*.zip deploy_dir
      deploy:
       - provider: s3
         access_key_id: ${AWS_STAGING_ACCESS_KEY}
         secret_access_key: ${AWS_STAGING_SECRET_KEY}
         region: "eu-west-1"
         bucket: "alfresco-artefacts-staging"
         upload-dir: "alfresco-content-services/snapshots/test/ek/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}"
         skip_cleanup: true
         acl: private
         local_dir: deploy_dir
         on:
           all_branches: true
#          condition: $TRAVIS_BRANCH =~ need this???
      after_deploy:
       - echo "alfresco-artefacts-staging/alfresco-content-services/snapshots/test/ek/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}/alfresco.war"
       - ./scripts/print-artifact-locations.sh ${TRAVIS_BRANCH} ${TRAVIS_BUILD_NUMBER}

    - name: "Copy to S3 Release Bucket"
      stage: publish
      if: fork = false AND (branch = feature/repo-4736-release_stage OR branch = master OR branch =~ /support\/.*/) AND type != pull_request AND commit_message =~ /\[publish\]/
      # Nothing to build/install as we are just copying from S3 buckets
      install: skip
      script:
        - echo "TEST ECHO VARS $RELEASE_VERSION $DEVELOPMENT_VERSION $TEST_VAR"
      before_deploy: pip install awscli
      delpoy:
        - provider: script
          script:  ./scripts/travis/copy_to_release_bucket.sh ${TRAVIS_BUILD_NUMBER} ${TRAVIS_BRANCH} ${RELEASE_VERSION}
          on:
            branch: master