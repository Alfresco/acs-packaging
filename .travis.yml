---
dist: xenial
language: java
jdk: openjdk17

sudo: false

services:
  - docker

git:
  depth: false
  quiet: true

cache:
  directories:
    - ${HOME}/.m2/repository

# the cache can grow constantly
before_cache: bash scripts/travis/cleanup_cache.sh

branches:
  only:
    - master
    - /release\/.*/
    - /feature\/.*/
    - /fix\/.*/

env:
  global:
    - TAS_SCRIPTS=../alfresco-community-repo/packaging/tests/scripts
    - TAS_ENVIRONMENT=./tests/environment
    - ALF_LICENCE_S3_PATH=s3://acs-license/acs/alf73-allenabled.lic
    - ALF_LICENCE_LOCAL_PATH=/tmp/licence.lic
    # Release version has to start with real version (7.3.0-....) for the docker image to build successfully.
    - RELEASE_VERSION=7.3.0-A10
    - DEVELOPMENT_VERSION=7.3.0-A11-SNAPSHOT
    - DTAS_VERSION="${DTAS_VERSION:-v1.1}"
    - PYTHON_VERSION=3.7.12

stages:
  - name: test
    if: commit_message !~ /\[skip tests\]/
  - name: docker_latest
    if: commit_message !~ /\[skip docker_latest\]/ AND branch = master AND type != pull_request AND fork = false
  - name: docker_release
    if: commit_message !~ /\[skip docker_release\]/ AND branch =~ /release\/.*/ AND type != pull_request AND fork = false
  - name: release
    if: commit_message =~ /\[release\]/ AND (branch = master OR branch =~ /release\/.*/) AND type != pull_request AND fork = false
  - name: publish
    if: commit_message =~ /\[publish\]/ AND (branch = master OR branch =~ /release\/.*/) AND type != pull_request AND fork = false
  - name: update_downstream
    if: (commit_message =~ /\[downstream\]/ OR (commit_message =~ /\[release\]/ AND commit_message !~ /\[no downstream\]/)) AND (branch = master OR branch =~ /release\/.*/) AND type != pull_request AND fork = false

before_install: travis_retry bash scripts/travis/init.sh
install: travis_retry travis_wait 40 bash scripts/travis/build.sh

jobs:
  include:
    - name: "Source Clear Scan (SCA)"
      if: branch = master OR branch =~ /release\/.*/
      # Run Veracode
      install: skip
      script: travis_wait 30 bash scripts/travis/source_clear.sh

    - name: "Update latest and Single Pipeline <acs>-<build> images"
      stage: docker_latest
      script:
        - travis_retry travis_wait 30 mvn -B -V clean install -ntp -DskipTests -Dmaven.javadoc.skip=true -Dbuild-number=${TRAVIS_BUILD_NUMBER} -Pags -Ppush-docker-images,pipeline

    - name: "Update release and Single Pipeline <acs>-<build> images"
      stage: docker_release
      script: travis_retry travis_wait 30 mvn -B -V clean install -ntp -DskipTests -Dmaven.javadoc.skip=true -Dbuild-number=${TRAVIS_BUILD_NUMBER} -Ppush-docker-images,pipeline,release-branch

    - name: "Release and Copy to S3 Staging Bucket"
      stage: release
      before_script: bash scripts/travis/verify_release_tag.sh
      script: travis_wait 60 bash scripts/travis/maven_release.sh
      before_deploy: source scripts/travis/prepare_staging_deploy.sh
      deploy:
        - provider: s3
          access_key_id: "${AWS_STAGING_ACCESS_KEY}"
          secret_access_key: "${AWS_STAGING_SECRET_KEY}"
          bucket: "alfresco-artefacts-staging"
          region: "eu-west-1"
          # Once Travis releases their *dpl v2* api (currently in beta, check https://docs.travis-ci.com/user/deployment-v2#how-to-opt-in-to-v2)
          # the skip_cleanup option will no longer be needed (or valid) and should be removed (ACS-1155).
          skip_cleanup: true
          acl: private
          local_dir: "deploy_dir"
          upload_dir: "alfresco-content-services/release/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}"
          on:
            all_branches: true
        - provider: s3
          access_key_id: "${AWS_STAGING_ACCESS_KEY}"
          secret_access_key: "${AWS_STAGING_SECRET_KEY}"
          bucket: "alfresco-artefacts-staging"
          region: "eu-west-1"
          skip_cleanup: true
          acl: private
          local_dir: "deploy_dir_share"
          upload_dir: "share/${RELEASE_VERSION}"
          on:
            all_branches: true
        - provider: s3
          access_key_id: "${AWS_STAGING_ACCESS_KEY}"
          secret_access_key: "${AWS_STAGING_SECRET_KEY}"
          bucket: "alfresco-artefacts-staging"
          region: "eu-west-1"
          skip_cleanup: true
          acl: private
          local_dir: "deploy_dir_ags"
          upload_dir: "enterprise/RM/${RELEASE_VERSION}"
          on:
            all_branches: true
        - provider: script
          script: bash scripts/travis/copy_share_image_to_docker_hub.sh
          on:
            all_branches: true
      after_deploy:
        - echo "Finished release and deployed to https://s3.console.aws.amazon.com/s3/buckets/alfresco-artefacts-staging/alfresco-content-services/release/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}"

    - name: "Copy to S3 Release Bucket"
      stage: publish
      # We do not want to build/install the tip of the branch which will be a SNAPSHOT.
      install: skip
      script: travis_wait 60 bash scripts/travis/maven_publish.sh
      before_deploy: pip install awscli
      deploy:
        - provider: script
          script: bash scripts/travis/copy_to_release_bucket.sh
          on:
            all_branches: true
        - provider: script
          script: bash scripts/travis/copy_share_to_release_bucket.sh
          on:
            all_branches: true
        - provider: script
          script: bash scripts/travis/copy_ags_to_release_bucket.sh
          on:
            all_branches: true

    - name: "Update acs-community-packaging (after release)"
      stage: update_downstream
      install: skip
      script: bash scripts/travis/update_downstream.sh
