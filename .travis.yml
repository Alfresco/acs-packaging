---
dist: xenial
sudo: required
language: java
jdk: openjdk8

services:
  - docker

git:
  depth: false
  quiet: true

cache:
  directories:
    - ${HOME}/.m2/repository

# the cache can grow constantly
before_cache: bash scripts/travis/cleanup_cache.sh

branches:
  only:
    - master
    - /release\/.*/

env:
  global:
    # Release version has to start with real version (7.0.0-....) for the docker image to build successfully.
    - RELEASE_VERSION=6.0.0.6
    - DEVELOPMENT_VERSION=6.0.0.7-SNAPSHOT

stages:
  - name: test
    if: commit_message !~ /\[skip tests\]/
  - name: docker_latest
    if: fork = false AND type != pull_request AND branch = master
  - name: release
    if: commit_message =~ /\[release\]/ AND fork = false AND type != pull_request AND (branch = master OR branch =~ /release\/.*/ OR branch = feature/REPO-5111_repo_build)
  - name: publish
    if: commit_message =~ /\[publish\]/ AND fork = false AND type != pull_request AND (branch = master OR branch =~ /release\/.*/)

before_install: travis_retry bash scripts/travis/init.sh
install: travis_retry travis_wait 40 bash scripts/travis/build.sh

jobs:
  include:
    - name: "Empty Job"
      # Exists so that the build takes place on feature branches
      stage: test
      if: fork = false AND (branch != master AND branch !~ /release\/.*/) OR type == pull_request
      script:
        - java -version

    - name: "Update Docker latest images"
      stage: docker_latest
      script: travis_retry travis_wait 30 mvn -B -V clean install -DskipTests -Dmaven.javadoc.skip=true -Pinternal

    - name: "Release and Copy to S3 Staging Bucket"
      stage: release
      before_script: bash scripts/travis/verify_release_tag.sh
      script: travis_wait 60 bash scripts/travis/maven_release.sh
      before_deploy:
        # Move the final artifacts to a single folder (deploy_dir) to be copied to S3
        - mkdir -p deploy_dir
        - cp distribution/target/alfresco.war deploy_dir
        - cp distribution/target/*-distribution*.zip deploy_dir
      deploy:
        - provider: s3
          access_key_id: "${AWS_STAGING_ACCESS_KEY}"
          secret_access_key: "${AWS_STAGING_SECRET_KEY}"
          bucket: "alfresco-artefacts-staging"
          region: "eu-west-1"
          skip_cleanup: true
          acl: private
          local_dir: "deploy_dir"
          upload_dir: "alfresco-content-services/release/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}"
          on:
            all_branches: true
      after_deploy:
        - echo "Finished release and deployed to https://s3.console.aws.amazon.com/s3/buckets/alfresco-artefacts-staging/alfresco-content-services/release/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}"

    - name: "Copy to S3 Release Bucket"
      stage: publish
      # Nothing to build/install as we are just copying from S3 buckets
      install: skip
      script: skip
      before_deploy: pip install awscli
      deploy:
        - provider: script
          script: bash scripts/travis/copy_to_release_bucket.sh
          on:
            all_branches: true
