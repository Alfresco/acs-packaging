# Default values for alfresco-acs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

registryPullSecrets: quay-registry-secret

repository:
  replicaCount: 1
  image:
    repository: quay.io/alfresco/alfresco-content-repository
    tag: "master-6.0.0-SNAPSHOT"
    pullPolicy: Always
    internalPort: 8080
  service:
    name: alfresco
    type: NodePort
    externalPort: 80
  ingress:
    path: /alfresco
  environment:
    JAVA_OPTS: " -Dsolr.base.url=/solr
      -Dsolr.secureComms=none
      -Dindex.subsystem.name=solr6"
  resources:
    requests:
      memory: "1000Mi"
    limits:
      memory: "4000Mi"

alfrescopdfrenderer:
  replicaCount: 1
  image:
    repository: quay.io/alfresco/alfresco-docker-alfresco-pdf-renderer
    tag: "latest"
    pullPolicy: Always
    internalPort: 8090
  service:
    name: alfrescopdfrenderer
    type: ClusterIP
    externalPort: 80
  resources:
    requests:
      memory: "256Mi"
    limits:
      memory: "512Mi"

imagemagick:
  replicaCount: 1
  image:
    repository: quay.io/alfresco/alfresco-docker-imagemagick
    tag: "latest"
    pullPolicy: Always
    internalPort: 8090
  service:
    name: imagemagick
    type: ClusterIP
    externalPort: 80
  resources:
    requests:
      memory: "256Mi"
    limits:
      memory: "512Mi"

libreoffice:
  replicaCount: 1
  image:
    repository: quay.io/alfresco/alfresco-docker-libreoffice
    tag: "latest"
    pullPolicy: Always
    internalPort: 8090
  service:
    name: libreoffice
    type: ClusterIP
    externalPort: 80
  resources:
    requests:
      memory: "256Mi"
    limits:
      memory: "1024Mi"

share:
  replicaCount: 1
  image:
    repository: alfresco/alfresco-share
    tag: "6.0.a"
    pullPolicy: Always
    internalPort: 8080
  service:
    name: share
    type: NodePort
    externalPort: 80
  ingress:
    path: /share
  resources:
    requests:
      memory: "500Mi"
    limits:
      memory: "1600Mi"

solr:
  replicaCount: 1
  image:
    repository: quay.io/alfresco/search-services
    tag: "1.2.0-SNAPSHOT"
    pullPolicy: Always
    internalPort: 8983
  service:
    name: solr
    type: NodePort
    externalPort: 80
  ingress:
    path: /solr
  environment:
    SOLR_CREATE_ALFRESCO_DEFAULTS: alfresco,archive
    SOLR_OPTS: "-Dsolr.content.dir=/opt/alfresco-search-services/data/contentstore"
  resources:
    requests:
      memory: "250Mi"
    limits:
      memory: "1024Mi"

persistence:
  existingClaim: "alfresco-volume-claim"
  repository:
    data:
      mountPath: "/usr/local/tomcat/alf_data"
      subPath: "alfresco-content-services/repository-data"
  solr:
    data:
      mountPath: "/opt/alfresco-search-services/data"
      subPath: "alfresco-content-services/solr-data"

alfresco-content-services:
  alfresco-infrastructure:
    enabled: true

alfresco-infrastructure:
  rabbitmq-ha:
    enabled: false
  activemq:
    enabled: false
  alfresco-keycloak:
    enabled: false
  alfresco-activiti-cloud-registry:
    enabled: false
  alfresco-api-gateway:
    enabled: false

database:
  type: postgresql

postgresql:
  ## If true, install the postgresql chart alongside Alfresco Content Services
  enabled: true
  nameOverride: postgresql-acs
  imageTag: "10.1"
  postgresUser: alfresco
  postgresPassword: alfresco
  postgresDatabase: alfresco
  persistence:
    existingClaim: "alfresco-volume-claim"
    subPath: "alfresco-content-services/database-data"
  resources:
    requests:
      memory: "250Mi"
    limits:
      memory: "500Mi"
  driver: org.postgresql.Driver

replicaCount: 1
