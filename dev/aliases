# The aliases in this script provide simple commands to build projects, start tomcat and combinations of these. This
# give the flexibility to only rebuild or repackage parts of the codebase that have changed.
#
# The Enterprise repo project depends on artifacts from the community repo project, but not any of its docker images.
# Once the repository component has been built, it will need to be combined with other ACS components in one of the
# packaging projects or the Share projects (alfresco-enterprise-share and its read only community mirror share).
#
# When developing code, you will normally not be creating repository docker images, or TAS test jar files, but will be
# creating war files and then running them in a local tomcat instance. To provide the environment needed to do this you
# will need to start a docker-compose environment to provide access to a databases and other ACS components.
#
# If need to create Docker images or create TAS test jar files (extended in downstream projects), use the aliases that
# end in D for Docker.
#
# By default only the share-services AMP is built by these aliases. Additional AMPS may be included by adding their
# profile to the AMPS environment variable. For example: export AMPS="-Pags"
#
# Aliases to build a sequence of projects and start tomcat - remember to start a CLEAN docker-compose environment - see envUp
#   com - builds alfresco-community-repo & acs-community-packaging
#   ent - builds alfresco-community-repo, alfresco-enterprise-repo & acs-packaging
#
# Aliases to build projects WITHOUT creating docker images or TAS tests jars
#   comR - alfresco-community-repo
#   entR - alfresco-enterprise-repo
#   comS - share
#   entS - alfresco-enterprise-share
#   comP - acs-community-packaging
#   entP - acs-packaging
#
# Aliases to build projects including DOCKER images and TAS tests jars
#   comRD - alfresco-community-repo
#   entRD - alfresco-enterprise-repo
#   comSD - share
#   entSD - alfresco-enterprise-share
#   comPD - acs-community-packaging
#   entPD - acs-packaging

# Aliases to start tomcat in a CLEAN environment - remember to start a docker-compose environment - see envUp
#   comT - acs-community-packaging
#   entT - acs-packaging
#   comTDebug - acs-community-packaging (uses mvnDebug to allow a debugger to be attached)
#   entTDebug - acs-packaging

# Aliases to start tomcat REUSING an existing environment (database and alf_data directory)
#   comO - acs-community-packaging
#   entO - acs-packaging
#   comODebug - acs-community-packaging (uses mvnDebug to allow a debugger to be attached)
#   entODebug - acs-packaging

# Set environment variables if not already set
if [ -z ${AMPS+x} ]
then
  export AMPS=""
fi
if [ -z ${TAG+x} ]
then
  export TAG=latest
fi

alias  comR='(cd alfresco-community-repo   && mvn clean install $AMPS -DskipTests=true -Dversion.edition=Community)'
alias  comS='(cd share                     && mvn clean install $AMPS -DskipTests      -Dmaven.javadoc.skip=true)'
alias  comP='(cd acs-community-packaging   && mvn clean install                        -Dmaven.javadoc.skip=true)'
alias  entR='(cd alfresco-enterprise-repo  && mvn clean install $AMPS -DskipTests=true -Dmaven.javadoc.skip=true )'
alias  entS='(cd alfresco-enterprise-share && mvn clean install $AMPS -DskipTests      -Dmaven.javadoc.skip=true)'
alias  entP='(cd acs-packaging             && mvn clean install)'

alias comRD='(cd alfresco-community-repo   && mvn clean install -Pbuild-docker-images -Pall-tas-tests $AMPS -DskipTests=true -Dimage.tag=$TAG -Dversion.edition=Community)'
alias comSD='(cd share                     && mvn clean install -Pbuild-docker-images -Pall-tas-tests $AMPS -DskipTests      -Dimage.tag=$TAG -Drepo.image.tag=$TAG -Dmaven.javadoc.skip=true -DskipTests=true)'
alias comPD='(cd acs-community-packaging   && mvn clean install -Pbuild-docker-images -Pall-tas-tests       -DskipTests=true -Dimage.tag=$TAG -Drepo.image.tag=$TAG -Dmaven.javadoc.skip=true)'
alias entRD='(cd alfresco-enterprise-repo  && mvn clean install -Pbuild-docker-images -Pall-tas-tests $AMPS -DskipTests=true -Dimage.tag=$TAG                       -Dmaven.javadoc.skip=true )'
alias entSD='(cd alfresco-enterprise-share && mvn clean install -Pbuild-docker-images -Pall-tas-tests $AMPS -DskipTests      -Dimage.tag=$TAG -Drepo.image.tag=$TAG -Dmaven.javadoc.skip=true -DskipTests=true)'
alias entPD='(cd acs-packaging             && mvn clean install -Pbuild-docker-images -Pall-tas-tests       -DskipTests=true -Dimage.tag=$TAG -Drepo.image.tag=$TAG)'

alias      comT='(cd acs-community-packaging  && mvn      clean install -Prun)'
alias comTDebug='(cd acs-community-packaging  && mvnDebug clean install -Pags,run)'
alias      comO='(cd acs-community-packaging  && mvn            install -Pags,run -rf dev/dev-acs-amps-overlay)'
alias comODebug='(cd acs-community-packaging  && mvnDebug       install -Pags,run -rf dev/dev-acs-amps-overlay)'
alias      entT='(cd acs-packaging            && mvn      clean install -Pags,run)'
alias entTDebug='(cd acs-packaging            && mvnDebug clean install -Pags,run)'
alias      entO='(cd acs-packaging            && mvn            install -Pags,run -rf dev/dev-acs-amps-overlay)'
alias entODebug='(cd acs-packaging            && mvnDebug       install -Pags,run -rf dev/dev-acs-amps-overlay)'

alias   com='comR  && comS  && comP  && comT'
alias  comD='comRD && comSD && comPD'
alias  comX='comR  && comS  && comP'
alias comDR='comRD && comRD && comPD'
alias comXR='comR  && comR  && comP'
alias comXS='comS  && comP'
alias   ent='comR  && entR  && entS  && entP  && entT'
alias  entD='comR  && entRD && entSD && entPD'
alias  entX='comR  && entR  && entS  && entP'
alias entDR='comRD && entRD && entPD'
alias entXR='comR  && entR  && entP'
alias entXS='entS  && entP'

# Clean up of docker images and content stores (alf_data directories)
alias     drm='docker rm -f $(docker ps -q)'
alias     arm='rm -rf `find . -name alf_data`'
alias   envUp='docker-compose -f acs-packaging/dev/docker-compose.yml up'
alias envStop='docker-compose -f acs-packaging/dev/docker-compose.yml stop'
alias envKill='docker-compose -f acs-packaging/dev/docker-compose.yml kill'
alias   envRm='docker-compose -f acs-packaging/dev/docker-compose.yml rm'
