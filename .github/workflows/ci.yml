name: ACS Packaging CI

on:
  pull_request:
    branches:
      - feature/**
      - fix/**
      - master
      - release/**
  push:
    branches:
      - feature/**
      - fix/**
  workflow_call:
  workflow_dispatch:

env:
  AZURE_AUTHENTICATION_MODE: sharedKey
  AZURE_STORAGE_ACCOUNT_NAME: acspackagingci
  AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_PACKAGING_STORAGE_ACCOUNT_KEY }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_ACTIONS_DEPLOY_TIMEOUT: 60
  GIT_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
  GIT_EMAIL: ${{ secrets.BOT_GITHUB_EMAIL }}
  GIT_PASSWORD: ${{ secrets.BOT_GITHUB_TOKEN }}
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  CI_WORKSPACE: ${{ github.workspace }}
  AWS_REGION: eu-west-1
  TAS_ENVIRONMENT: ./tests/environment
  TAS_SCRIPTS: ../alfresco-community-repo/packaging/tests/scripts
  ALF_LICENCE_S3_PATH: s3://acs-license/acs/alf231-allenabled.lic
  ALF_LICENCE_LOCAL_PATH: /tmp/licence.lic
  PYTHON_VERSION: 3.7.15
  DTAS_VERSION: v1.1

jobs:
  docker_latest:
    name: "Update latest and Single Pipeline <acs>-<build> images"
    runs-on: ubuntu-latest
    if: >
      contains(github.event.head_commit.message, '[docker]')
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.35.2
      - uses: Alfresco/alfresco-build-tools/.github/actions/free-hosted-runner-disk-space@v1.35.2
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.35.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/ci/init.sh
          bash ./scripts/ci/build.sh -m
      - name: Compute final build number
        run: |
          echo "COMPUTED_BUILD_NUMBER=$(( $BASE_BUILD_NUMBER + $BUILD_NUMBER ))" >> $GITHUB_ENV
      - name: "Update images"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn -B -V clean install -ntp -DskipTests -Dmaven.javadoc.skip=true -Dbuild-number=${COMPUTED_BUILD_NUMBER} -Pags -Ppush-docker-images
      - name: "Clean Maven cache"
        run: bash ./scripts/ci/cleanup_cache.sh
