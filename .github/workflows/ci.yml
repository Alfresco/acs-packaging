name: ACS Packaging CI

on:
  pull_request:
  push:
    branches:
      - feature/**
      - fix/**
  workflow_call:

env:
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_ACTIONS_DEPLOY_TIMEOUT: 60
  JAVA_VERSION: "17"
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  GIT_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
  GIT_PASSWORD: ${{ secrets.BOT_GITHUB_PASSWORD }}
  TAS_ENVIRONMENT: ./tests/environment
  TAS_SCRIPTS: ../acs-packaging/tests/scripts
  # Release version has to start with real version (7.4.0-....) for the docker image to build successfully.
  RELEASE_VERSION: 7.4.0-A3
  DEVELOPMENT_VERSION: 7.4.0-A4-SNAPSHOT

jobs:
  veracode:
    name: "Source Clear Scan (SCA)"
    runs-on: ubuntu-latest
    if: >
      (github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request') &&
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: Alfresco/alfresco-build-tools/.github/actions/veracode@master
        with:
          srcclr-api-token: ${{ secrets.SRCCLR_API_TOKEN }}

  TAS-Tests:
    name: ${{ matrix.testSuite }} TAS tests
    runs-on: ubuntu-latest
    if: >
      contains(github.event.head_commit.message, '[tas]') &&
      ! contains(github.event.head_commit.message, '[skip tests]')
    strategy:
      fail-fast: false
      matrix:
        include:
          - testSuite: REST API part1
            pom: tests/tas-restapi/pom.xml
            profiles: all-tas-tests,run-restapi-part1
            compose-file: docker-compose-rest-api-tests.yml
            deploy-timeout: 60
          - testSuite: REST API part2
            pom: tests/tas-restapi/pom.xml
            profiles: all-tas-tests,run-restapi-part2
            compose-file: docker-compose-rest-api-tests.yml
            deploy-timeout: 60
          - testSuite: REST API part3
            pom: tests/tas-restapi/pom.xml
            profiles: all-tas-tests,run-restapi-part3
            compose-file: docker-compose-rest-api-tests.yml
            deploy-timeout: 60
          - testSuite: CMIS (BROWSER binding)
            pom: tests/tas-cmis/pom.xml
            profiles: all-tas-tests,run-cmis-browser
            compose-file: docker-compose-cmis-tests.yml
            deploy-timeout: 40
          - testSuite: CMIS (ATOM binding)
            pom: tests/tas-cmis/pom.xml
            profiles: all-tas-tests,run-cmis-atom
            compose-file: docker-compose-cmis-tests.yml
            deploy-timeout: 40
          - testSuite: CMIS (WEBSERVICES binding)
            pom: tests/tas-cmis/pom.xml
            profiles: all-tas-tests,run-cmis-webservices
            compose-file: docker-compose-cmis-tests.yml
            deploy-timeout: 40
          - testSuite: Email
            pom: tests/tas-email/pom.xml
            profiles: all-tas-tests
            compose-file: docker-compose-email-tests.yml
            deploy-timeout: 30
          - testSuite: WebDAV
            pom: tests/tas-webdav/pom.xml
            profiles: all-tas-tests
            compose-file: docker-compose-minimal.yml
            deploy-timeout: 20
          - testSuite: Integration
            pom: tests/tas-integration/pom.xml
            profiles: all-tas-tests
            compose-file: docker-compose-integration-tests.yml
            deploy-timeout: 30
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/ci/init.sh
          bash ./scripts/ci/build.sh
      - name: "Set up the environment"
        run: |
          ${{ env.TAS_SCRIPTS }}/start-compose.sh ${{ env.TAS_ENVIRONMENT }}/${{ matrix.compose-file }}
          ${{ env.TAS_SCRIPTS }}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      - name: "Run tests"
        timeout-minutes: ${{ matrix.deploy-timeout }}
        run: mvn -B install -ntp -f ${{ matrix.pom }} -P${{ matrix.profiles }} -Denvironment=default -DrunBugs=false

  LDAP-TAS-tests:
    name: "LDAP TAS tests"
    runs-on: ubuntu-latest
    if: >
      contains(github.event.head_commit.message, '[tas]') &&
      ! contains(github.event.head_commit.message, '[skip tests]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/ci/init.sh
          bash ./scripts/ci/build.sh
      - name: "Set up the environment"
        run: |
          ${{ env.TAS_SCRIPTS }}/start-compose.sh ${{ env.TAS_ENVIRONMENT }}/docker-compose-with-ldap.yml
          ${{ env.TAS_SCRIPTS }}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      - name: "Run tests"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          mvn -B install -ntp -f tests/tas-restapi/pom.xml -Pall-tas-tests,run-restapi-ldap -Denvironment=default -DrunBugs=false
          mvn -B install -ntp -f tests/tas-integration/pom.xml -Prun-ldap -Denvironment=default -DrunBugs=false
