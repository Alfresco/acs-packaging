name: Master/Release branch workflow

on:
  push:
    branches:
      - master
      - release/**
      - feature/**
  schedule:
    - cron:  '0 5 * * 3'

env:
  AWS_REGION: eu-west-1
  GIT_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
  GIT_EMAIL: ${{ secrets.BOT_GITHUB_EMAIL }}
  GIT_PASSWORD: ${{ secrets.BOT_GITHUB_TOKEN }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  GITHUB_ACTIONS_DEPLOY_TIMEOUT: 60
  BASE_BUILD_NUMBER: 10000
  # Release version has to start with real version (7.4.0-....) for the docker image to build successfully.
  RELEASE_VERSION: 23.1.0-A20
  DEVELOPMENT_VERSION: 23.1.0-A21-SNAPSHOT

jobs:
  run_ci:
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  docker_release:
    name: "Update release and Single Pipeline <acs>-<build> images"
    runs-on: ubuntu-latest
    needs: [run_ci]
    if: >
      contains(github.event.head_commit.message, '[docker]')
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.35.2
      - uses: Alfresco/alfresco-build-tools/.github/actions/free-hosted-runner-disk-space@v1.35.2
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.35.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/ci/init.sh
          bash ./scripts/ci/build.sh -m
      - name: Compute final build number
        run: |
          echo "COMPUTED_BUILD_NUMBER=$(( $BASE_BUILD_NUMBER + $BUILD_NUMBER ))" >> $GITHUB_ENV
      - name: "Update images"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn -B -V clean install -ntp -DskipTests -Dmaven.javadoc.skip=true -Ppush-docker-images,pipeline,release-branch -Drepo.image.tag=latest -Dshare.image.tag=latest -Dimage.tag=23.1.0-GPT-POC-${COMPUTED_BUILD_NUMBER}
      - name: "Clean Maven cache"
        run: bash ./scripts/ci/cleanup_cache.sh
